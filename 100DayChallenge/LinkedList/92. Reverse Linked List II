
public ListNode reverseBetween(ListNode head, int left, int right) {
        if(head == null || head.next == null) return head;

        // create a dummy node to mark the head of the list
        ListNode dummy = new ListNode(0);
        dummy.next = head;

        //make marker for currentNode and for the node before reversing
        ListNode leftPre = dummy;
        ListNode currNode = head;

        // finding left and previous of left for reversing
        for(int i = 0; i < left-1; i++){
            leftPre = leftPre.next;
            currNode = currNode.next;
        }
        //make marker to node where we start reversing
        ListNode subListHead = currNode;
        ListNode preNode = null;

        for(int i = 0; i <= right-left; i++){
            
            ListNode nextNode = currNode.next;
            currNode.next = preNode;
            preNode = currNode;
            currNode = nextNode;
        }
        // making connection
        leftPre.next = preNode;
        subListHead.next = currNode;
        return dummy.next;
    }